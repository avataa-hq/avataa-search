# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import hierarchy_data_pb2 as hierarchy__data__pb2


class HierarchyDataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllHierarchies = channel.unary_stream(
                '/hierarchy_data.HierarchyData/GetAllHierarchies',
                request_serializer=hierarchy__data__pb2.EmptyRequest.SerializeToString,
                response_deserializer=hierarchy__data__pb2.GetAllHierarchiesResponse.FromString,
                )
        self.GetLevelsByHierarchyId = channel.unary_stream(
                '/hierarchy_data.HierarchyData/GetLevelsByHierarchyId',
                request_serializer=hierarchy__data__pb2.HierarchyIdRequest.SerializeToString,
                response_deserializer=hierarchy__data__pb2.GetLevelsByHierarchyIdResponse.FromString,
                )
        self.GetObjsByLevelId = channel.unary_stream(
                '/hierarchy_data.HierarchyData/GetObjsByLevelId',
                request_serializer=hierarchy__data__pb2.LevelIdRequest.SerializeToString,
                response_deserializer=hierarchy__data__pb2.GetObjsByLevelIdResponse.FromString,
                )
        self.GetNodeDatasByLevelId = channel.unary_stream(
                '/hierarchy_data.HierarchyData/GetNodeDatasByLevelId',
                request_serializer=hierarchy__data__pb2.LevelIdRequest.SerializeToString,
                response_deserializer=hierarchy__data__pb2.GetNodeDatasByLevelIdResponse.FromString,
                )
        self.GetHierarchyPermissionByHierarchyId = channel.unary_stream(
                '/hierarchy_data.HierarchyData/GetHierarchyPermissionByHierarchyId',
                request_serializer=hierarchy__data__pb2.HierarchyIdRequest.SerializeToString,
                response_deserializer=hierarchy__data__pb2.PermissionStreamResponse.FromString,
                )
        self.GetHierarchyById = channel.unary_unary(
                '/hierarchy_data.HierarchyData/GetHierarchyById',
                request_serializer=hierarchy__data__pb2.HierarchyIdRequest.SerializeToString,
                response_deserializer=hierarchy__data__pb2.HierarchySchema.FromString,
                )


class HierarchyDataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllHierarchies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLevelsByHierarchyId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjsByLevelId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeDatasByLevelId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHierarchyPermissionByHierarchyId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHierarchyById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HierarchyDataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllHierarchies': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllHierarchies,
                    request_deserializer=hierarchy__data__pb2.EmptyRequest.FromString,
                    response_serializer=hierarchy__data__pb2.GetAllHierarchiesResponse.SerializeToString,
            ),
            'GetLevelsByHierarchyId': grpc.unary_stream_rpc_method_handler(
                    servicer.GetLevelsByHierarchyId,
                    request_deserializer=hierarchy__data__pb2.HierarchyIdRequest.FromString,
                    response_serializer=hierarchy__data__pb2.GetLevelsByHierarchyIdResponse.SerializeToString,
            ),
            'GetObjsByLevelId': grpc.unary_stream_rpc_method_handler(
                    servicer.GetObjsByLevelId,
                    request_deserializer=hierarchy__data__pb2.LevelIdRequest.FromString,
                    response_serializer=hierarchy__data__pb2.GetObjsByLevelIdResponse.SerializeToString,
            ),
            'GetNodeDatasByLevelId': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNodeDatasByLevelId,
                    request_deserializer=hierarchy__data__pb2.LevelIdRequest.FromString,
                    response_serializer=hierarchy__data__pb2.GetNodeDatasByLevelIdResponse.SerializeToString,
            ),
            'GetHierarchyPermissionByHierarchyId': grpc.unary_stream_rpc_method_handler(
                    servicer.GetHierarchyPermissionByHierarchyId,
                    request_deserializer=hierarchy__data__pb2.HierarchyIdRequest.FromString,
                    response_serializer=hierarchy__data__pb2.PermissionStreamResponse.SerializeToString,
            ),
            'GetHierarchyById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHierarchyById,
                    request_deserializer=hierarchy__data__pb2.HierarchyIdRequest.FromString,
                    response_serializer=hierarchy__data__pb2.HierarchySchema.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hierarchy_data.HierarchyData', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HierarchyData(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllHierarchies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hierarchy_data.HierarchyData/GetAllHierarchies',
            hierarchy__data__pb2.EmptyRequest.SerializeToString,
            hierarchy__data__pb2.GetAllHierarchiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLevelsByHierarchyId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hierarchy_data.HierarchyData/GetLevelsByHierarchyId',
            hierarchy__data__pb2.HierarchyIdRequest.SerializeToString,
            hierarchy__data__pb2.GetLevelsByHierarchyIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetObjsByLevelId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hierarchy_data.HierarchyData/GetObjsByLevelId',
            hierarchy__data__pb2.LevelIdRequest.SerializeToString,
            hierarchy__data__pb2.GetObjsByLevelIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeDatasByLevelId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hierarchy_data.HierarchyData/GetNodeDatasByLevelId',
            hierarchy__data__pb2.LevelIdRequest.SerializeToString,
            hierarchy__data__pb2.GetNodeDatasByLevelIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHierarchyPermissionByHierarchyId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hierarchy_data.HierarchyData/GetHierarchyPermissionByHierarchyId',
            hierarchy__data__pb2.HierarchyIdRequest.SerializeToString,
            hierarchy__data__pb2.PermissionStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHierarchyById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hierarchy_data.HierarchyData/GetHierarchyById',
            hierarchy__data__pb2.HierarchyIdRequest.SerializeToString,
            hierarchy__data__pb2.HierarchySchema.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
