syntax = "proto3";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

message HierarchyMessageSchema {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string author = 4;
  string change_author = 5;
  string status = 6;
  bool create_empty_nodes = 7;
  google.protobuf.Timestamp created = 8;
  google.protobuf.Timestamp modified = 9;
}

message LevelMessageSchema {
  int64 id = 1;
  string name = 2;
  string description = 3;
  int32 level = 4;
  int64 hierarchy_id = 5;
  int64 parent_id = 6;
  int64 object_type_id = 7;
  bool is_virtual = 8;
  int64 param_type_id = 9;
  int64 additional_params_id = 10;
  int64 latitude_id = 11;
  int64 longitude_id = 12;
  string author = 13;
  string change_author = 14;
  google.protobuf.Timestamp created = 15;
  google.protobuf.Timestamp modified = 16;
  bool show_without_children = 17;
  repeated string key_attrs = 18;
  int64 attr_as_parent = 19;
}


message NodeMessageSchema {
  string id = 1;
  string key = 2;
  int64 object_id = 3;
  int64 object_type_id = 4;
  string additional_params = 5;
  int64 hierarchy_id = 6;
  int32 level = 7;
  int64 level_id = 8;
  string parent_id = 9;
  double latitude = 10;
  double longitude = 11;
  int64 child_count = 12;
  bool active = 13;
  bool key_is_empty = 14;
  string path = 15;
}


message NodeDataMessageSchema {
  int64 id = 1;
  int64 level_id = 2;
  string node_id = 3;
  int64 mo_id = 4;
  string mo_name = 5;
  double mo_latitude = 6;
  double mo_longitude = 7;
  string mo_status = 8;
  int64 mo_tmo_id = 9;
  int64 mo_p_id = 10;
  bool mo_active = 11;
  google.protobuf.Struct unfolded_key = 12;
}

message HierarchyPermissionMessageSchema{
  int64 id = 1;
  int64 root_permission_id = 2;
  string permission = 3;
  string permission_name = 4;
  bool create = 5;
  bool read = 6;
  bool update = 7;
  bool delete = 8;
  bool admin = 9;
  int64 parent_id = 10;
}

message ListHierarchy {
  repeated HierarchyMessageSchema objects = 1;
}

message ListLevel {
  repeated LevelMessageSchema objects = 1;
}

message ListNode {
  repeated NodeMessageSchema objects = 1;
}

message ListNodeData {
  repeated NodeDataMessageSchema objects = 1;
}

message ListHierarchyPermission {
  repeated HierarchyPermissionMessageSchema objects = 1;
}